<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guide pratique on Gorgonia</title><link>https://gorgonia.org/fr/how-to/</link><description>Recent content in Guide pratique on Gorgonia</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 28 Oct 2019 11:40:47 +0100</lastBuildDate><atom:link href="https://gorgonia.org/fr/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Résoudre des problèmes de GPU</title><link>https://gorgonia.org/fr/how-to/troubleshoot-gpu-issues/</link><pubDate>Fri, 17 Jul 2020 06:24:26 +1000</pubDate><guid>https://gorgonia.org/fr/how-to/troubleshoot-gpu-issues/</guid><description>Ce document est une liste de conseils en cas de problème. Si vous rencontrez des difficultés en utilisant des GPUs, ce document devrait pouvoir vous aider.
Le package cu fonctionne avec une application appelée cudatest qui devrait être utile pour résoudre des problèmes.
Pour installer cudatest, lancez :
go install gorgonia.org/cu/cmd/cudatest Cela implique que vous ayez déjà installé CUDA, et cuDNN.
Erreur d&amp;rsquo;initalisation avec plusieurs GPUs Si vous utilisez plusieurs GPUs, vous pourriez tomber sur un message qui ressemble à ce qui suit :</description></item><item><title>Dessiner le ExprGraph avec Graphviz (dot)</title><link>https://gorgonia.org/fr/how-to/dot/</link><pubDate>Sun, 01 Dec 2019 10:14:55 +0100</pubDate><guid>https://gorgonia.org/fr/how-to/dot/</guid><description>Le package encoding de Gorgonia contient une fonction permettant de déployer le ExprGraph en dot language.
Cela permet d&amp;rsquo;utiliser le programme graphviz pour générer des versions png ou svg du graphique.
Une manière simple de le faire :
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;gorgonia.org/gorgonia&amp;#34; &amp;#34;gorgonia.org/gorgonia/encoding/dot&amp;#34; ) func main() { g := gorgonia.NewGraph() var x, y *gorgonia.Node // define the expression x = gorgonia.NewScalar(g, gorgonia.Float64, gorgonia.WithName(&amp;#34;x&amp;#34;)) y = gorgonia.NewScalar(g, gorgonia.</description></item><item><title>Créer un tensor depuis un Dataframe (gota)</title><link>https://gorgonia.org/fr/how-to/dataframe/</link><pubDate>Wed, 30 Oct 2019 22:57:09 +0100</pubDate><guid>https://gorgonia.org/fr/how-to/dataframe/</guid><description>Cet article explique comment créer un tenseur depuis un dataframe en utilisant le package gota.
Le but est de lire un fichier csv et de créer un objet *tensor.Dense de forme (2,2).
Creation du dataframe depuis le fichier csv Considerons un ficier csv avec le contenu suivant:
sepal_length,sepal_width,petal_length,petal_width,species 5.1 ,3.5 ,1.4 ,0.2 ,setosa 4.9 ,3.0 ,1.4 ,0.2 ,setosa 4.7 ,3.2 ,1.3 ,0.2 ,setosa 4.6 ,3.1 ,1.5 ,0.2 ,setosa 5.0 ,3.</description></item><item><title>Sauver les matrices de poids</title><link>https://gorgonia.org/fr/how-to/save-weights/</link><pubDate>Tue, 29 Oct 2019 20:07:16 +0100</pubDate><guid>https://gorgonia.org/fr/how-to/save-weights/</guid><description>But Le but de cet article est de décrire la façon de sauvegarder les valeurs des noeuds values et de les restaurer.
Implementation La meilleure chose à faire de suite est de de sauvegarder la valeur des noeuds correspondants et de les restaurer.
Les tenseurs remplissent les contrats d&amp;rsquo;interface GobEncode et GobDecode, ce qui représente la meilleure option. On peut aussi sauvegarder le tableau d&amp;rsquo;éléments sous-jascent au tenseur, mais c&amp;rsquo;est un peu plus complexe.</description></item><item><title>Comment calculer le gradient (dérivation)</title><link>https://gorgonia.org/fr/how-to/autodiff/</link><pubDate>Tue, 29 Oct 2019 20:07:07 +0100</pubDate><guid>https://gorgonia.org/fr/how-to/autodiff/</guid><description>Objectif Prenez cette équation simple :
$$ f(x,y,z) = ( x + y ) \times z $$
L&amp;rsquo;objectif de cet article est de vous montrer comment Gorgonia peut évaluer le gradient $\nabla f$ avec ses dérivées partielles :
$$ \nabla f = [\frac{\partial f}{\partial x}, \frac{\partial f}{\partial y}, \frac{\partial f}{\partial z}] $$
Explication En utilisant la règle de dérivation d&amp;rsquo;une fonction composée, on peut obtenir la valeur du gradient à chaque étape comme démontré ici :</description></item></channel></rss>